{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"atta",
				"attack_insertion	statement"
			],
			[
				"unkn",
				"unknown_secret_prefix	statement"
			],
			[
				"make",
				"make_hash	function"
			],
			[
				"fin",
				"finish	function"
			],
			[
				"app",
				"append_bytes	param"
			],
			[
				"hex",
				"hex_digest	param"
			],
			[
				"M",
				"MD4	class"
			],
			[
				"un",
				"unknown_secret_prefix	statement"
			],
			[
				"byt",
				"byte_string	statement"
			],
			[
				"bits",
				"bits_b	statement"
			],
			[
				"unknw",
				"unknown_secret_prefix"
			],
			[
				"ec",
				"Exception	class"
			],
			[
				"fake",
				"fake_hash	statement"
			],
			[
				"md",
				"md5	function"
			],
			[
				"pref",
				"prefix_len	param"
			],
			[
				"he",
				"hex_digest"
			],
			[
				"b2a",
				"b2a_hex	function"
			],
			[
				"byte",
				"byteorder"
			],
			[
				"hash",
				"hash_pieces	statement"
			],
			[
				"check",
				"check_hash	function"
			],
			[
				"int",
				"intended_forgery	statement"
			],
			[
				"clone",
				"cloned_sha1	statement"
			],
			[
				"chec",
				"check_hash	statement"
			],
			[
				"upda",
				"update"
			],
			[
				"make_",
				"make_sha1_clone	function"
			],
			[
				"est",
				"est_len	param"
			],
			[
				"get",
				"get_digest_and_check_variable	function"
			],
			[
				"expe",
				"expected_update	statement"
			],
			[
				"clon",
				"clone_state	function"
			],
			[
				"SH",
				"Sha1Hash	class"
			],
			[
				"fina",
				"final_128_bits	statement"
			],
			[
				"Message",
				"message_length"
			],
			[
				"message",
				"message_length	param"
			],
			[
				"has",
				"hashlib_digest	statement"
			],
			[
				"_test",
				"_test_hashlib_SHA1	function"
			],
			[
				"len",
				"length	param"
			],
			[
				"exce",
				"exception"
			],
			[
				"CBC",
				"CBC_encrypt_oracle	function"
			],
			[
				"retri",
				"retrieve_key	function"
			],
			[
				"clean",
				"clean_exception	function"
			],
			[
				"ciph",
				"ciphertext"
			],
			[
				"non",
				"non_ascii_cipher	statement"
			],
			[
				"as",
				"ascii_check	statement"
			],
			[
				"Uni",
				"UnicodeDecodeError	class"
			],
			[
				"PCK",
				"PKCS7_unpad	function"
			],
			[
				"PC",
				"PKCS7_pad	function"
			],
			[
				"encr",
				"encrypted_text	statement"
			],
			[
				"edi",
				"edit_ciphertext	function"
			],
			[
				"enc",
				"encrypt_AES_CTR	function"
			],
			[
				"dis",
				"disencrypted	statement"
			],
			[
				"en",
				"encrypt_AES_CTR	function"
			],
			[
				"new",
				"new_cipher	statement"
			],
			[
				"ma",
				"make_suffix"
			],
			[
				"wokr",
				"work_byte"
			],
			[
				"user",
				"user_check"
			],
			[
				"gener",
				"generated_token"
			],
			[
				"pass",
				"password_token"
			],
			[
				"token",
				"token"
			],
			[
				"known",
				"known_data	statement"
			],
			[
				"rand",
				"randint	statement"
			],
			[
				"rec",
				"recovered_seed	statement"
			],
			[
				"reco",
				"recover_seed	function"
			],
			[
				"MT",
				"MT_stream_xor	function"
			],
			[
				"key_",
				"key_byte"
			],
			[
				"key",
				"key_stream	param"
			],
			[
				"bytes",
				"bytes_data	statement"
			],
			[
				"out",
				"output_bytes	statement"
			],
			[
				"from",
				"from_bytes	function"
			],
			[
				"RNG",
				"RNG_original	statement"
			],
			[
				"list",
				"list_of_outputs	param"
			],
			[
				"random",
				"random_seed"
			],
			[
				"tem",
				"temper	function"
			],
			[
				"state",
				"state_at_start	statement"
			],
			[
				"s",
				"state	statement"
			],
			[
				"_",
				"_TEMPER_MASK_2	statement"
			],
			[
				"likel",
				"likely_key_stream	statement"
			],
			[
				"li",
				"list_of_ciphers	statement"
			],
			[
				"min",
				"min_len	statement"
			],
			[
				"b",
				"bytes_xor	function"
			],
			[
				"poss",
				"possible_key_streams	statement"
			],
			[
				"like",
				"likely_key_stream	statement"
			],
			[
				"try",
				"try_likely_bytes	function"
			],
			[
				"dic",
				"dictionary	statement"
			],
			[
				"dec",
				"decryption	statement"
			],
			[
				"cry",
				"cryptotools	module"
			],
			[
				"possible_ke",
				"possible_key_stream	statement"
			],
			[
				"encrypt",
				"encrypt_literal	statement"
			],
			[
				"encryp",
				"encrypted_bytes	statement"
			],
			[
				"score",
				"score_bytes_by_nonce_index	function"
			],
			[
				"nonce",
				"nonce_slices	statement"
			],
			[
				"lower",
				"lowercase	statement"
			],
			[
				"nonc",
				"nonce_indices	param"
			],
			[
				"plain",
				"plaintext_list	param"
			],
			[
				"plaint",
				"plaintext"
			],
			[
				"pl",
				"PLAINTEXTS	statement"
			],
			[
				"bin",
				"binascii	module"
			],
			[
				"plaintext",
				"plaintext_list	param"
			],
			[
				"decr",
				"decrypted	statement"
			],
			[
				"control",
				"controlled_string_CBC	function"
			],
			[
				"work",
				"work_byte"
			],
			[
				"possible",
				"possible_IV	forstmt"
			],
			[
				"padding",
				"padding_oracle	param"
			],
			[
				"Inde",
				"IndexError	class"
			],
			[
				"adm",
				"admin_bytes	statement"
			],
			[
				"PKC",
				"PKCS7_pad	function"
			],
			[
				"admin",
				"adminview	Model Admin View"
			],
			[
				"MODE",
				"MODE_CBC	statement"
			],
			[
				"padd",
				"padding_oracle	param"
			],
			[
				"valid",
				"valid_IVs	statement"
			],
			[
				"new_",
				"new_known_bytes"
			],
			[
				"know",
				"known_bytes	param"
			],
			[
				"xor_vs_le",
				"xor_vs_length_plus_one	function"
			],
			[
				"pad",
				"pad_bytes	param"
			],
			[
				"find",
				"find_valid_padding_bytes	function"
			],
			[
				"possi",
				"possible_IVs	statement"
			],
			[
				"update",
				"update_known_padding	function"
			],
			[
				"a",
				"a_string	statement"
			],
			[
				"initial",
				"initial_value	param"
			],
			[
				"initia",
				"initial_value	param"
			],
			[
				"cip",
				"ciphertext	param"
			],
			[
				"de",
				"decrypt	function"
			],
			[
				"stat",
				"static_IV	statement"
			],
			[
				"static",
				"static_key	statement"
			],
			[
				"sta",
				"static_key	statement"
			],
			[
				"AE",
				"AES	module"
			],
			[
				"stati",
				"static_index	statement"
			],
			[
				"con",
				"con_bytes	statement"
			],
			[
				"iner",
				"inserted_len"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "{\n    api_key: 51edfdc8891a215eb311e9678ed8f6d1 \n}",
			"file": "steganocats.json",
			"file_size": 0,
			"file_write_time": 131026162508781295,
			"settings":
			{
				"buffer_size": 50,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 222.0,
		"last_filter": "python",
		"selected_items":
		[
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"pytohn",
				"Build With: Python"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"PYTHON",
				"Set Syntax: Python"
			],
			[
				"python	",
				"Set Syntax: Python"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"djan",
				"Set Syntax: HTML (Django)"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package control ins",
				"Package Control: Install Package"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"pyth",
				"Set Syntax: MagicPython"
			],
			[
				"Magic	",
				"Set Syntax: MagicPython"
			],
			[
				"Ma",
				"Set Syntax: MagicPython"
			],
			[
				"magic",
				"Set Syntax: MagicPython"
			],
			[
				"mag",
				"Set Syntax: MagicPython"
			],
			[
				"pack ",
				"Package Control: Install Package"
			],
			[
				"MAG",
				"Set Syntax: MagicPython"
			],
			[
				"PACKA",
				"Package Control: Disable Package"
			],
			[
				"PACKA ",
				"Package Control: Install Package"
			],
			[
				"PACKAGE",
				"Package Control: List Packages"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"py",
				"Set Syntax: Python"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jake/Documents/steganocats"
	],
	"file_history":
	[
		"/home/jake/Documents/steganocats/steganocats.json",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge5.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/cryptotools.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/md4.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge30.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/md5.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/sha1.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge28.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge29.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge27.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge25.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge14.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge24.py",
		"/home/jake/Documents/baseserver/baseserver.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge18.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge7.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge17.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge21.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge23.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge19.py",
		"/home/jake/Documents/asciimatics/asciimatics/samples/cogs.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge22.py",
		"/home/jake/Documents/asciimatics/asciimatics/samples/credits.py",
		"/home/jake/.bashrc",
		"/home/jake/.bash_profile",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge6.py",
		"/home/jake/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/jake/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/jake/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/jake/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/jake/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge16.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge15.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge10.py",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge14",
		"/home/jake/Desktop/Cryptopals/cryptopals_scripts/challenge13.py",
		"/home/jake/.config/sublime-text-3/Packages/User/Python3.sublime-build",
		"/home/jake/.config/sublime-text-3/Packages/User/SublimeREPL.sublime-settings",
		"/home/jake/.config/sublime-text-3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/home/jake/Desktop/django_tutorial/tutorial/first_tutorial_project/polls/views.py",
		"/home/jake/Desktop/django_tutorial/tutorial/first_tutorial_project/polls/templates/polls/index.html",
		"/home/jake/Desktop/django_tutorial/tutorial/first_tutorial_project/polls/urls.py",
		"/home/jake/.config/sublime-text-3/Packages/User/Python Django.sublime-settings",
		"/Users/jakedavis/Desktop/gits/cryptopals/challenge13.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/first_tutorial_project/manage.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/first_tutorial_project/polls/admin.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/first_tutorial_project/polls/models.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/mysite/polls/views.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/mysite/mysite/urls.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/mysite/polls/urls.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/first_tutorial_project/mysite/settings.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/mysite/mysite/settings.py",
		"/Users/jakedavis/Documents/django_sites/tutorial/mysite/polls/models.py",
		"/Users/jakedavis/Desktop/gits/cryptopals/challenge10.py",
		"/Users/jakedavis/Desktop/gits/cryptopals/naiveCBC.py",
		"/Users/jakedavis/Desktop/gits/cryptopals/challenge9.py",
		"/Users/jakedavis/Desktop/gits/cryptopals/challenge12.py",
		"/Users/jakedavis/Desktop/Cryptopals/cryptotools.py",
		"/Users/jakedavis/Desktop/Cryptopals/challenge6.py",
		"/Users/jakedavis/Desktop/vigenere.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/Cryptopals/challenge1.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/Cryptopals/challenge2.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/Cryptopals/challenge3.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/historical_ciphers.py",
		"/Users/jakedavis/Desktop/data munging GABF winners/GABF.py",
		"/Users/jakedavis/Desktop/mnemoproject/mnemoproject2.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/ciphers.py",
		"/Users/jakedavis/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/jakedavis/Desktop/roman numerals.py",
		"/Users/jakedavis/Desktop/Over_The_Wire__Bandit/bandit2",
		"/Users/jakedavis/Desktop/Cipher fiddles/ciphers2.py",
		"/Users/jakedavis/Desktop/Cipher fiddles/text.txt",
		"/Users/jakedavis/Desktop/Cipher fiddles/test.py",
		"/Users/jakedavis/Desktop/smarty.py",
		"/Users/jakedavis/Desktop/bittersbot/untitled.py",
		"/Users/jakedavis/Desktop/mnemoproject/memoryterms.js",
		"/Users/jakedavis/Desktop/cocktailproject/mysite/polls/templates/test.txt",
		"/Users/jakedavis/Desktop/cocktailproject/mysite/mysite/settings.py",
		"/Users/jakedavis/Desktop/cocktailproject/mysite/polls/models.py",
		"/Users/jakedavis/Desktop/data munging GABF winners/gabf_winner_data.py",
		"/Users/jakedavis/Desktop/drink maker/drinkmaker.py",
		"/Users/jakedavis/Desktop/python fiddles/print('Hello world!').py",
		"/Users/jakedavis/Desktop/osx-terminal.app-colors-solarized-master/README.md",
		"/Applications/XAMPP/xamppfiles/htdocs/SID/sid.php"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"digest",
			"hex_digest",
			"\"",
			"xrange",
			"check_byte",
			"est_len",
			"first_64_bytes",
			"64",
			"make_sha1_clone(digest)",
			"digest",
			"data",
			"process_suffix",
			"make_suffix",
			"bytes_data",
			"some_data",
			"key_byte",
			"MT_stream_cipher",
			"input",
			"_recover_state",
			"DEB",
			"RNGesus",
			"seed",
			"recover_state",
			"get_intermediate_variable",
			"_untemper_second_shift",
			"_untemper_first_shift",
			"untempo",
			"y",
			"_int32",
			"possible_key_stream",
			"shortest_cipher",
			"nonce_indices",
			"score_bytes_by_nonce_index",
			"tab",
			"nonce",
			"plaintext_list",
			"decrypt_block_via_padding",
			"find",
			"index",
			"new_known_bytes",
			"pad",
			"pad_bytes",
			"update_known_padding",
			"passed_bytes",
			"possible",
			"pad_bytes",
			"mode=",
			"insertion",
			"static_index",
			"b_l",
			"index",
			"find_insertion_index",
			"find_static_insertion",
			"index",
			"static_index",
			"confirm_ECB_cipher",
			"confirmation_cipher",
			"_",
			"auto",
			"block_index",
			"block_length",
			"target_byte",
			"ECB_encrypt",
			"standard_key",
			"static_key",
			"blocklength",
			"missing_bytes",
			"cyclexor",
			"encrypted_data",
			"encrypted",
			"hamming_keys",
			"attempts",
			"b",
			"a",
			"AttributeE",
			"Caesar.LETTERS",
			"sub",
			"'-'",
			"s",
			"english_words",
			"encrpyt",
			"string_int",
			"num",
			","
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self.LETTERS",
			", \\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "steganocats.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 178.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.textarea":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "steganocats.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/who-life-expectancy-site/days_site.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 236.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
